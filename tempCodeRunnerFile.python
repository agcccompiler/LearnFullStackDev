import psutil
import time

def monitor_cpu(interval=1):
    """实时监控 CPU 使用率
    :param interval: 采样间隔（秒）
    """
    print("CPU 监控中 (按 Ctrl+C 退出)...")
    try:
        while True:
            # 获取总 CPU 使用率

            try:
               freq = psutil.cpu_freq()
               if freq:
                   print(f"CPU 频率: {freq.current} MHz")
               else:
                   print("CPU 频率: 不可用")
            except Exception as e:
               print("CPU 频率: 不可用")
            total_usage = psutil.cpu_percent(interval=interval)
            
            # 获取每个核心的使用率
            per_core_usage = psutil.cpu_percent(percpu=True)
            
            # 获取 CPU 频率（macOS权限允许时）
            freq = psutil.cpu_freq()
            
            # 打印结果
            print(f"\n总使用率: {total_usage}%")
            for i, core in enumerate(per_core_usage):
                print(f"核心 {i}: {core}%", end=' | ')
            
            if freq:  # 如果获取到频率
                print(f"\n当前频率: {freq.current:.0f}MHz (最大: {freq.max:.0f}MHz)")
            
            print("-" * 40)
            
    except KeyboardInterrupt:
        print("\n监控结束")

if __name__ == "__main__":
    monitor_cpu(interval=1)  # 每秒更新一次
